plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
  id 'jacoco'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) {
  jvmArgs = ['-Xms8g', '-Xmx8g']
}

application {
  mainModule = 'com.example.mapofdenmark'
  mainClass = 'com.example.mapofdenmark.Main'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation 'junit:junit:4.13.1'
  testImplementation 'junit:junit:4.13.1'
  testImplementation 'junit:junit:4.13.1'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

test {
  finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
  dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
  dependsOn test // tests are required to run before generating the report
  violationRules {
    rule {
      limit {
        minimum = 1.0
      }
    }
  }
}